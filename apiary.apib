FORMAT: 1A
HOST: http://bshelf.apphb.com/

# Bookshelf
Bookshelf API is a sample API representing a _collection of books_, with functionality for borrowing and returning books. 

* API entry point: http://bshelf.apphb.com/
* Source code: https://github.com/dewe/Bookshelf/

## API Root [/]
Provides templated links to relevant bookshelf resources.

URL templates are following [RFC 6570](http://tools.ietf.org/html/rfc6570).

### Entry Point [GET]
+ Response 200 (application/json)

        {
            "api_root_url": "http://bshelf.apphb.com",
            "bookshelf_url": "http://bshelf.apphb.com/books",
            "book_url": "http://bshelf.apphb.com/books/{isbn}",
            "loan_url": "http://bshelf.apphb.com/books/{isbn}/loan",
            "documentation_url": "http://docs.bshelf.apiary.io",
            "source_code_url": "https://github.com/dewe/bookshelf",
            "design_comments_url": "https://github.com/dewe/bookshelf/blob/master/Comments.md"
        }

## Books Collection [/books]
All books on the bookshelf.

### List all Books [GET]
+ Response 200 (application/json)

        {
            "books": [
                {
                "title": "Switch: How to Change Things When Change Is Hard",
                "author": "Chip Heath, Dan Heath",
                "isbn": "0385528752",
                "loaned": null,
                "version": 12
                },
                {
                "title": "Specification by Example: How Successful Teams Deliver the Right Software",
                "author": "Gojko Adzic",
                "isbn": "1617290084 ",
                "loaned": "Johan Dewe",
                "version": 3
                }
            ]
        }

## Book [/books/{isbn}]
A single book identified by its *ISBN-10*

+ Parameters
    + isbn (required, string, `0132350882`) ... This is the ID that identifies a Book in the form of ISBN-10.

### Retrieve a Book [GET]
+ Response 200 (application/json)

        {
            "title": "Clean Code: A Handbook of Agile Software Craftsmanship",
            "author": "Robert C. Martin",
            "isbn": "0132350882",
            "loaned": "Mr Developer",
            "version": 42
        }

## Loan [/books/{isbn}/loan]
Use the loan endpoint to borrow book, or return a book.

+ Parameters
    + isbn (required, string, `0310941784`) ... This is the ID that identifies a Book in the form of ISBN-10.

### Borrow a book [PUT]
+ Request (application/json)

        { "borrower": "S:t Peter" }

+ Response 201 (application/json)

        {
            "title": "Holy Bible: King James Version",
            "author": "Holy Ghost et al",
            "isbn": "0310941784 ",
            "loaned": "S:t Peter",
            "version": 1
        }

+ Response 403 (application/json)

        { "message": "There is an existing loan for this book." }

+ Response 422 (application/json)

        { 
            "message": "Validation failed",
            "error": "Property 'borrower' must not be empty"
        }

### Return a book [DELETE]
+ Response 200 (application/json)

        {
            "title": "Holy Bible: King James Version",
            "author": "Holy Ghost et al",
            "isbn": "0310941784 ",
            "loaned": null,
            "version": 2
        }

+ Response 404 (application/json)

        { "message": "There is no current loan" }

### Check loan [GET]
+ Response 200 (application/json)

        { "borrower": "S:t Peter" }

+ Response 404 (application/json)

        { "message": "There is no current loan" }
